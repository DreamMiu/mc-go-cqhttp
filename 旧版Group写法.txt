if (McGoCqHttp.groupIDList.contains(groupId)) {
                    //判断是否为绑定动作
                    if (message.contains(McGoCqHttp.groupInputKey)) {
                        //获取绑定的游戏名字
                        val name = message.split(" ")[1]
                        //获取玩家
                        val player = Bukkit.getPlayer(name)
                        //判断玩家不为空
                        if (player != null) {
                            //判断玩家是否绑定
                            if (DataBaseManager.getQQ(player.uniqueId) == "未绑定") {
                                //发送绑定消息
                                player.sendLang("Minecraft-Bind", sendQQ, name)
                                groupId?.let { it1 ->
                                    GroupMessage().send(
                                        it1,
                                        (Language.languageFile["zh_CN"]!!.nodes["QQ-sendMessageToMinecraft"] as TypeText).text!!
                                    )
                                }
                                //监听玩家输入字符串并且30秒超时后发送超时消息给玩家
                                player.nextChatInTick(30 * 20, { str ->
                                    if (str == (Language.languageFile["zh_CN"]!!.nodes["Minecraft-BindKey"] as TypeText).text!!) {
                                        DataBaseManager.saveQQ(player.uniqueId, sendQQ)
                                        //发送绑定成功消息
                                        player.sendLang("Minecraft-Success")
                                        groupId?.let { it1 ->
                                            GroupMessage().send(
                                                it1,
                                                (Language.languageFile["zh_CN"]!!.nodes["QQ-Success"] as TypeText).text!!
                                            )
                                        }
                                        McGoCqHttp.actions.forEach { strs ->
                                            runAction(strs, player)
                                        }
                                        sendQQ?.let { it1 ->
                                            val event = PlayerBindQQEvent(it1, name)
                                            event.call()
                                        }
                                    }
                                }, {
                                    //发送超时消息
                                    player.sendLang("Minecraft-TimeOut")
                                    groupId?.let { it1 ->
                                        GroupMessage().send(
                                            it1,
                                            (Language.languageFile["zh_CN"]!!.nodes["QQ-TimeOut"] as TypeText).text!!
                                        )
                                    }
                                })
                            } else {
                                //发送已经绑定消息
                                player.sendLang("Minecraft-isBind")
                                groupId?.let { it1 ->
                                    GroupMessage().send(
                                        it1,
                                        (Language.languageFile["zh_CN"]!!.nodes["QQ-isBind"] as TypeText).text!!
                                    )
                                }
                            }
                        } else {
                            groupId?.let { it1 ->
                                GroupMessage().send(
                                    it1,
                                    (Language.languageFile["zh_CN"]!!.nodes["QQ-notFindPlayer"] as TypeText).text!!
                                )
                            }
                        }
                    }
                }